<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.goudong.user.dao.UserDao">

    <select id="findAllMenuUrl" resultType="java.lang.String">
        select url from authority_menu
    </select>

    <select id="findRoleNameByMenuUrl" resultType="java.lang.String">
        select
            ar.role_name
        from authority_menu am
        inner join authority_role_menu arm on am.id=arm.menu_id
        inner join authority_role ar on arm.role_id = ar.id
        where am.url = #{url}
    </select>
    <select id="findPasswordByUsernameAfterValidTime" resultType="java.lang.String">
        select password from authority_user where username=#{username}
    </select>
    <select id="findRoleNameByUsername" resultType="java.lang.String">
        SELECT
            ar.role_name
        FROM `authority_user` au
        inner join authority_user_role aur on au.id=aur.user_id
        inner join authority_role ar on aur.role_id = ar.id
        where au.username=#{username}
    </select>
    <select id="findUserIdAndNickNameAndRemarkByUsername" resultType="java.util.Map">
        SELECT id,nickname,remark FROM authority_user WHERE username=#{username}
    </select>
    <select id="findUrlsByUsername" resultType="java.lang.String">
        SELECT
        url
        FROM authority_menu
        WHERE id IN (SELECT menu_id FROM authority_role_menu WHERE role_id IN (SELECT role_id FROM authority_user_role WHERE user_id=(SELECT id FROM authority_user WHERE username=#{username})))
    </select>
    <select id="findRootMenuInfo" resultType="java.util.Map">
        SELECT id AS id, url AS url, menu_name AS menuName, parent_id AS parentId, url_pre AS urlPre, remark AS remark
        FROM authority_menu WHERE parent_id=0
    </select>
    <select id="findMenuInfoByParentId" resultType="java.util.Map">
        SELECT id AS id, url AS url, menu_name AS menuName, parent_id AS parentId, url_pre AS urlPre
        FROM authority_menu WHERE parent_id=#{id}
    </select>
    <select id="findRootMenuInfoByUsername" resultType="java.util.Map">
        SELECT id AS id, url AS url, menu_name AS menuName, parent_id AS parentId, url_pre AS urlPre, remark AS remark
        FROM authority_menu
        WHERE id IN (SELECT menu_id FROM authority_role_menu WHERE role_id IN
        (SELECT role_id FROM authority_user_role WHERE user_id=(SELECT id FROM authority_user WHERE username=#{username})))
        AND parent_id=0
    </select>
    <select id="findRootMenuIdOfPartialPermission" resultType="java.lang.Integer">
        SELECT DISTINCT(parent_id)
        FROM authority_menu
        WHERE parent_id NOT IN (SELECT id FROM authority_menu WHERE id IN (SELECT menu_id FROM authority_role_menu WHERE role_id IN (SELECT role_id FROM authority_user_role WHERE user_id=(SELECT id FROM authority_user WHERE username=#{username}))) AND parent_id=0)
        AND id IN (SELECT menu_id FROM authority_role_menu WHERE role_id IN (SELECT role_id FROM authority_user_role WHERE user_id=(SELECT id FROM authority_user WHERE username=#{username})))
        AND parent_id NOT IN (0,1)
    </select>
    <select id="findMenuInfoByMenuId" resultType="java.util.Map">
        SELECT id AS id, url AS url, menu_name AS menuName, parent_id AS parentId, url_pre AS urlPre, remark AS remark FROM authority_menu WHERE id=#{menuId}
    </select>
    <select id="findChildrenMenuInfoByUsernameAndParentId" resultType="java.util.Map">
        SELECT id AS id, url AS url, menu_name AS menuName, parent_id AS parentId, url_pre AS urlPre
        FROM authority_menu
        WHERE id IN (SELECT DISTINCT(id) FROM authority_menu
            WHERE parent_id NOT IN (SELECT id FROM authority_menu WHERE id IN (SELECT menu_id FROM authority_role_menu WHERE role_id IN (SELECT role_id FROM authority_user_role WHERE user_id=(SELECT id FROM authority_user WHERE username=#{username}))) AND parent_id=0)
            AND id IN (SELECT menu_id FROM authority_role_menu WHERE role_id IN (SELECT role_id FROM authority_user_role WHERE user_id=(SELECT id FROM authority_user WHERE username=#{username})))
        AND parent_id NOT IN (0,1))
        AND parent_id=#{menuId}
    </select>
    <resultMap id="findUserRoleInfoByUsernameResultMap" type="com.goudong.user.entity.AuthorityUserDO">
        <result column="auId" property="id"></result>
        <result column="username" property="username"></result>
        <result column="password" property="password"></result>
        <result column="email" property="email"></result>
        <result column="valid_time" property="validTime"></result>
        <result column="update_time" property="updateTime"></result>
        <result column="remark" property="remark"></result>
        <result column="nickname" property="nickname"></result>
        <collection property="authorityRoleDOS" ofType="com.goudong.user.entity.AuthorityRoleDO">
            <result column="arId" property="id"></result>
            <result column="role_name" property="roleName"></result>
            <result column="role_name_CN" property="roleNameCN"></result>
        </collection>

    </resultMap>
    <select id="findUserRoleInfoByUsername" resultMap="findUserRoleInfoByUsernameResultMap">
        select
            au.id auId,
            au.username,
            au.password,
            au.email,
            au.phone,
            au.valid_time,
            au.update_time,
            au.remark,
            au.nickname,
            ar.id arId,
            ar.role_name,
            ar.role_name_CN
        from authority_user au
        inner join authority_user_role aur on au.id=aur.user_id
        inner join authority_role ar on ar.id=aur.role_id
        where au.username=#{username}
    </select>

</mapper>